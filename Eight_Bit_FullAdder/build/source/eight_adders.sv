/*
    This file was generated automatically by Alchitry Labs 2.0.41-BETA.
    Do not edit this file directly. Instead edit the original Lucid source.
    This is a temporary file and any changes made to it will be destroyed.
*/

module eight_adders (
        input wire [7:0] x,
        input wire [7:0] y,
        input wire cin,
        output reg [7:0] s,
        output reg cout
    );
    logic [7:0] M_adder_x;
    logic [7:0] M_adder_y;
    logic [7:0] M_adder_cin;
    logic [7:0] M_adder_sum;
    logic [7:0] M_adder_cout;
    
    genvar idx_0_1796218039;
    
    generate
        for (idx_0_1796218039 = 0; idx_0_1796218039 < 8; idx_0_1796218039 = idx_0_1796218039 + 1) begin: forLoop_idx_0_1796218039
            adder adder (
                .x(M_adder_x[idx_0_1796218039]),
                .y(M_adder_y[idx_0_1796218039]),
                .cin(M_adder_cin[idx_0_1796218039]),
                .sum(M_adder_sum[idx_0_1796218039]),
                .cout(M_adder_cout[idx_0_1796218039])
            );
        end
    endgenerate
    
    
    always @* begin
        M_adder_x = x;
        M_adder_y = y;
        M_adder_cin[1'h0] = cin;
        M_adder_cin[3'h7:1'h1] = M_adder_cout[3'h6:1'h0];
        s = M_adder_sum;
        cout = M_adder_cout[3'h7];
    end
    
    
endmodule