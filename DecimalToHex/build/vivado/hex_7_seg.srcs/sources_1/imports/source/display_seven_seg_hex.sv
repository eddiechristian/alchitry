/*
    This file was generated automatically by Alchitry Labs 2.0.41-BETA.
    Do not edit this file directly. Instead edit the original Lucid source.
    This is a temporary file and any changes made to it will be destroyed.
*/

module display_seven_seg_hex (
        input wire clk,
        input wire rst,
        input wire [15:0] decimal,
        output reg [3:0][3:0] hex_digits,
        output reg [3:0] blank_digits,
        output reg [11:0] arb_out
    );
    localparam _MP_WIDTH_442104562 = 4'hc;
    logic [11:0] M_arb_out;
    
    arbiter #(
        .WIDTH(_MP_WIDTH_442104562)
    ) arb (
        .in(decimal),
        .out(M_arb_out)
    );
    
    
    localparam _MP_WIDTH_85842506 = 4'hc;
    logic [3:0] M_enc_out;
    
    encoder #(
        .WIDTH(_MP_WIDTH_85842506)
    ) enc (
        .in(M_arb_out),
        .out(M_enc_out)
    );
    
    
    always @* begin
        arb_out = M_enc_out;
        hex_digits = {decimal[4'hf:4'hc], decimal[4'hb:4'h8], decimal[3'h7:3'h4], decimal[2'h3:1'h0]};
        blank_digits = 4'h0;
        if (M_enc_out < 3'h4) begin
            blank_digits = 4'he;
        end else begin
            if (M_enc_out < 4'h8) begin
                blank_digits = 4'hc;
            end else begin
                if (M_enc_out < 4'hc) begin
                    blank_digits = 4'h8;
                end
            end
        end
    end
    
    
endmodule